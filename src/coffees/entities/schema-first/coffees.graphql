"""
Date custom scalar type
"""
scalar Date

interface Drink {
  name: String!
}

type Tea implements Drink {
  name: String!
  createdAt: Date
}

enum CoffeeType {
  ARABICA
  ROBUSTA
}

type Coffee implements Drink {
  """
  Unique identifier
  """
  id: ID!
  name: String!
  brand: String!
  flavors: [String!]!
  type: CoffeeType
  createdAt: Date
}

input CreateCoffeeInput {
  name: String!
  brand: String!
  flavors: [String!]!
}

input UpdateCoffeeInput {
  name: String
  brand: String
  flavors: [String!]
}

union DrinksResult = Coffee | Tea

type Query {
  coffees: [Coffee!]!
  coffee(id: ID!): Coffee!
  drinks: [DrinksResult!]!
}

type Mutation {
  createCoffee(createCoffeeInput: CreateCoffeeInput!): Coffee!
  updateCoffee(id: ID!, updateCoffeeInput: UpdateCoffeeInput!): Coffee!
  removeCoffee(id: ID!): Coffee!
}

type Subscription {
  coffeeAdded: Coffee!
}
